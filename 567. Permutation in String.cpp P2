class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        
        vector<int> s1hash(26,0);
        vector<int> s2hash(26,0);
        
        int s1len = s1.size();
        int s2len = s2.size();
        
        if(s1len>s2len)
            return false;
        
        int left=0,right=0;
        
        while(right<s1len){
            s1hash[s1[right]-'a'] +=1;      //  abc    
            s2hash[s2[right]-'a'] +=1;      //    ^     poniter moves 3 times  0 1 2   <3 
            right +=1;                          // right=0 1   <2
        }
        
        for (auto x: s1hash)
            cout << x << " ";
        
        cout << endl;
        
        for (auto x: s2hash)
            cout << x << " ";              
        
        //right=2 now, so decrement by 1      
        
        right -=1;  // to point right to the end of the window   right=1
        
        while(right<s2len)
        {
            if(s1hash==s2hash)                      "ei"  "id"  "db"  "ba"="ab"
                return true;
            
            right+=1;    
                                                        |   
            if(right!=s2len)                        "eidbaooo"     
                s2hash[s2[right]-'a'] +=1;               ^
                                                       |
            s2hash[s2[left]-'a'] -=1;               "eidbaooo"   "ei" "id" ""
                left +=1;                                ^
        }
        return false;
    }
};

1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    stores "ab"
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    stores "ei"    "eidbaooo"
    
    
    
    "sam is here"     "ah"    "am is h"   "mi"= 011   s1="ah" = 11
